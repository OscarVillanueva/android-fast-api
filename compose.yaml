services:
  proxy:
    container_name: router
    image: traefik:v2.11
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
    ports:
      - 80:80
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - traefik-net

  backend:
    container_name: fast-api-app
    build:
      context: ./
    env_file:
      - ./api/.env
    develop:
      watch:
        - path: ./api/src/main.py
          action: rebuild
          target: ./api/src/main.py
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - "8000:8000"
    labels:
      traefik.http.routers.backend.rule: Host(`api.localhost`)
      traefik.http.services.backend.loadbalancer.server.port: 8000
    networks:
      - traefik-net

  mysql:
    container_name: mysql-service
    image: mysql:8.0
    volumes:
      - todo-mysql-data:/var/lib/mysql
    env_file:
      - ./db/db.env
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - traefik-net

  phpmyadmin:
    image: phpmyadmin
    env_file:
      - ./db/db.env
    labels:
      traefik.http.routers.phpmyadmin.rule: Host(`db.localhost`)
      traefik.http.services.phpmyadmin.loadbalancer.server.port: 80
    networks:
      - traefik-net

volumes:
  todo-mysql-data:

networks:
  traefik-net:
    external: true
